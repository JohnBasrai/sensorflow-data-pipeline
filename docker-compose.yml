services:
  # Sensor data backend service
  sensorflow-be:
    container_name: sensorflow-be
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    #
    healthcheck:
      test:
        curl -f http://localhost:8080/health
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s
    #
    environment:
      # Docker internal hostnames - different from .env values
      - DATABASE_URL=postgres://cool_user:cool_pass@sensor-db:5432/cool_db
      - SENSOR_API_URL=http://sensor-api:8080/sensor-data
      - DB_POOL_MAX=5
      - API_MAX_PAGES=100
      # Filter out sqlx notices while keeping query warnings
      - RUST_LOG=info,sqlx::query=warn,sqlx::postgres::notice=error
      - AXUM_LOG_LEVEL=debug
      - AXUM_SPAN_EVENTS=enter_exit
      - FORCE_COLOR=0

    depends_on:
      sensor-db:
        condition: service_healthy
      sensor-api:
        condition: service_healthy
    restart: unless-stopped

  # Mock sensor data API
  sensor-api:
    container_name: sensor-api
    build:
      context: ./api
    ports:
      - "8081:8080"
    env_file:
      - .env
    healthcheck:
      test:
        curl -f http://localhost:8080/health
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  # PostgreSQL database
  sensor-db:
    image: postgres:15
    container_name: sensor-db
    environment:
      POSTGRES_USER: cool_user
      POSTGRES_PASSWORD: cool_pass
      POSTGRES_DB: cool_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

volumes:
  pgdata:
