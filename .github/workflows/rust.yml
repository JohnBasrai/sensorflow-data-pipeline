name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: rust-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: never
  CI: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install Rust toolchain (uses rust-toolchain.toml if present)
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # Fast Cargo builds
      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Prepare env
        run: |
          if [ -f .env.example ]; then cp .env.example .env; fi

      - name: Run Lint checks
        run: |
          cargo fmt --check 
          cargo clippy --quiet --workspace --all-targets --all-features --no-deps -- -D warnings

      - name: Start services
        run: |
          docker compose version
          docker compose up --build -d --wait --wait-timeout 60

      - name: Run tests
        env:
          BASE: http://localhost:8080
        run: cargo test --quiet --all-features --locked --all-targets

      - name: Show compose logs on failure
        if: failure()
        run: docker compose logs --no-color > compose.log 2>&1

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose.log

      - name: Teardown
        if: always()
        run: docker compose down -v
